// 이벤트 리스너를 가진 노드 서버를 만들어봅시다.

const http = require("http");

http.createServer((req, res) => {
  // 여기에 어떻게 응답할지 적습니다.
});

// http 서버가 있어야 웹 브라우저의 요청을 처리할 수 있으므로 http 모듈을 사용했습니다.
// http 모듈에는 createServer 메서드가 있습니다.
// 인수로 요청에 대한 콜백 함수를 넣을 수 있으며,
// 요청이 들어올 때마다 매번 콜백 함수가 실행됩니다.
// 따라서 이 콜백 함수에 응답을 적으면 됩니다.

// createServer의 콜백 부분을 보면 req와 res 매개변수가 있습니다.
// 보통 request를 줄여 req라고 표현하고,
// response를 줄여 res라고 표현합니다(매개변수의 이름을 마음대로 바꿔도 되는 것은 아시죠?).
// req 객체는 요청에 관한 정보들을, res 객체는 응답에 관한 정보들을 담고 있습니다.

// 아직은 코드를 실행해도 아무 일도 일어나지 않습니다.
// 요청에 대한 응답도 넣어주지 않았고 서버와 연결하지도 않았기 때문입니다.
// 다음 예제에서 응답을 보내는 부분과 서버에 연결하는 부분을 추가해보겠습니다.
