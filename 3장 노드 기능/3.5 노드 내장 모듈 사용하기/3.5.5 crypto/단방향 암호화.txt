####  단방향 암호화 ####
####  hash.js  ####

비밀번호는 보통 단방향 암호화 알고리즘을 사용해서 암호화합니다. 
단방향 암호화란 복호화할 수 없는 암호화 방식을 뜻합니다. 
복호화는 암호화된 문자열을 원래 문자열로 되돌려놓는 것을 의미합니다. 
즉, 단방향 암호화는 한 번 암호화하면 원래 문자열을 찾을 수 없습니다. 
복호화할 수 없으므로 암호화라고 표현하는 대신 해시 함수라고 부르기도 합니다.

복호화할 수 없는 암호화가 왜 필요한지 의문이 들 수도 있습니다. 
하지만 생각해보면 고객의 비밀번호는 복호화할 필요가 없습니다. 
먼저 고객의 비밀번호를 암호화해서 데이터베이스에 저장합니다. 
그리고 로그인할 때마다 입력받은 비밀번호를 같은 암호화 알고리즘으로 암호화한 후, 
데이터베이스의 비밀번호와 비교하면 됩니다. 
원래 비밀번호는 어디에도 저장되지 않고 암호화된 문자열로만 비교하는 것입니다.

단방향 암호화 알고리즘은 주로 해시 기법을 사용합니다. 
해시 기법이란 어떠한 문자열을 고정된 길이의 다른 문자열로 바꿔버리는 방식입니다. 
예를 들면 abcdefgh라는 문자열을 qvew로 바꿔버리고, ijklm이라는 문자열을 zvsf로 바꿔버리는 겁니다. 
입력 문자열의 길이는 다르지만, 출력 문자열의 길이는 네 자리로 고정되어 있습니다.

####

• createHash(알고리즘): 사용할 해시 알고리즘을 넣습니다. md5, sha1, sha256, sha512 등이 가능하지만, md5와 sha1은 이미 취약점이 발견되었습니다. 현재는 sha512 정도로 충분하지만, 나중에 sha512마저도 취약해지면 더 강화된 알고리즘으로 바꿔야 합니다.

• update(문자열): 변환할 문자열을 넣습니다.

• digest(인코딩): 인코딩할 알고리즘을 넣습니다. base64, hex, latin1이 주로 사용되는데, 그중 base64가 결과 문자열이 가장 짧아 애용됩니다. 결과물로 변환된 문자열을 반환합니다.