이번 절에는 자주 발생하는 에러들을 모아두었습니다. 
아직 배우지 않은 상황에서 발생하는 에러도 있습니다. 
이 책을 읽다가 발생하는 에러들이 있다면 이 절을 찾아보면 됩니다. 
자바스크립트 문법상에서 발생하는 에러는 포함하지 않았습니다.

• node: command not found: 
노드를 설치했지만 이 에러가 발생하는 경우는 
환경 변수가 제대로 설정되지 않은 것입니다. 
환경 변수에는 노드가 설치된 경로가 포함되어야 합니다. 
node 외의 다른 명령어도 마찬가지입니다. 
그 명령어를 수행할 수 있는 파일이 환경 변수에 들어 있어야 
명령어를 콘솔에서 사용할 수 있습니다.

• ReferenceError: 
모듈 is not defined: 모듈을 require했는지 확인합니다.

• Error: Cannot find module 모듈명: 
해당 모듈을 require했지만 설치하지 않았습니다. 
npm i 명령어로 설치하세요.

• Error: Can't set headers after they are sent: 
요청에 대한 응답을 보낼 때 응답을 두 번 이상 보냈습니다. 
요청에 대한 응답은 한 번만 보내야 합니다. 
응답을 보내는 메서드를 두 번 이상 사용하지 않았는지 체크해보세요.

• FATAL ERROR: 
CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory: 
코드를 실행할 때 메모리가 부족하여 스크립트가 정상 작동하지 않는 경우입니다. 
코드가 잘못되었을 확률이 높으므로 코드를 점검해보세요. 
만약 코드는 정상이지만 노드가 활용할 수 있는 메모리가 부족한 경우라면 
노드의 메모리를 늘릴 수 있습니다. 
노드를 실행할 때 node --max-old-space-size=4096 파일명과 같은 명령어를 사용하면 됩니다. 
4096은 4GB를 의미합니다. 원하는 용량을 적으면 됩니다.

• UnhandledPromiseRejectionWarning: 
Unhandled promise rejection: 프로미스 사용 시 catch 메서드를 붙이지 않으면 발생합니다. 
항상 catch를 붙여 에러가 나는 상황에 대비하세요.

• EADDRINUSE 포트 번호: 
해당 포트 번호에 이미 다른 프로세스가 연결되어 있습니다. 
그 프로세스는 노드 프로세스일 수도 있고 다른 프로그램일 수도 있습니다. 
그 프로세스를 종료하거나 다른 포트 번호를 사용해야 합니다.