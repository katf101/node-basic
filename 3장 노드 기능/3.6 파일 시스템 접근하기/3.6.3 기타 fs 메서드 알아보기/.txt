여기서는 네 가지 메서드를 소개합니다. 
모두 비동기 메서드이므로 한 메서드의 콜백에서 
다른 메서드를 호출합니다.

• fs.access(경로, 옵션, 콜백): 
폴더나 파일에 접근할 수 있는지를 체크합니다. 
두 번째 인수로 상수들(constants를 통해 가져옵니다)을 넣었습니다.
 F_OK는 파일 존재 여부, R_OK는 읽기 권한 여부, W_OK는 쓰기 권한 여부를 체크합니다. 
 파일/폴더나 권한이 없다면 에러가 발생하는데 파일/폴더가 없을 때의 에러 코드는 ENOENT입니다.

• fs.mkdir(경로, 콜백): 
폴더를 만드는 메서드입니다. 
이미 폴더가 있다면 에러가 발생하므로 
먼저 access 메서드를 호출해서 확인하는 것이 중요합니다.

• fs.open(경로, 옵션, 콜백): 
파일의 아이디(fd 변수)를 가져오는 메서드입니다. 
파일이 없다면 파일을 생성한 뒤 그 아이디를 가져옵니다. 
가져온 아이디를 사용해 fs.read나 fs.write로 읽거나 쓸 수 있습니다. 
두 번째 인수로 어떤 동작을 할 것인지를 설정할 수 있습니다. 
쓰려면 w, 읽으려면 r, 기존 파일에 추가하려면 a입니다. 
앞의 예제에서는 w를 했으므로 파일이 없을 때 새로 만들 수 있었습니다. 
r이었다면 에러가 발생했을 것니다.

• fs.rename(기존 경로, 새 경로, 콜백): 
파일의 이름을 바꾸는 메서드입니다. 
기존 파일 위치와 새로운 파일 위치를 적으면 됩니다. 
꼭 같은 폴더를 지정할 필요는 없으므로 잘라내기 같은 기능을 할 수도 있습니다.

#### 삭제 관련

• fs.readdir(경로, 콜백): 
폴더 안의 내용물을 확인할 수 있습니다. 
배열 안에 내부 파일과 폴더명이 나옵니다.

• fs.unlink(경로, 콜백): 
파일을 지울 수 있습니다. 
파일이 없다면 에러가 발생하므로 먼저 파일이 있는지를 꼭 확인해야 합니다.

• fs.rmdir(경로, 콜백): 
폴더를 지울 수 있습니다. 
폴더 안에 파일들이 있다면 에러가 발생하므로 
먼저 내부 파일을 모두 지우고 호출해야 합니다.